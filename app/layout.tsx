"use client";

import Image from 'next/image'
import './globals.css'
import { Inter } from 'next/font/google'
import { Container } from '@src/components/container'
import { NavLink } from '@src/components/nav/navlink';
import { Analytics } from "@vercel/analytics/react";
import { ThemeProvider, useTheme } from 'next-themes';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faComputer, faLightbulb, faMoon } from '@fortawesome/free-solid-svg-icons';

const inter = Inter({ subsets: ['latin'] })

// export const metadata = {
// 	title: 'Create Next App',
// 	description: 'Generated by create next app',
// }

export default function RootLayout({
	children,
}: React.PropsWithChildren) {
	return (
		<html lang="en">
			<body className={inter.className + " dark:bg-black bg-white"}>
				<Providers>
					<Body>
						{children}
					</Body>
				</Providers>
			</body>
		</html>
	)
}

function Providers({ children }: React.PropsWithChildren) {
	return (
		<ThemeProvider enableSystem={true} defaultTheme="dark" attribute="class">
			{children}
		</ThemeProvider>
	);
}

function Body({ children }: React.PropsWithChildren) {
	return (
		<>
			<header
				className="fixed top-0 w-full h-16 z-10 overflow-hidden border-b border-solid border-neutral-700 bg-opacity-60 backdrop-blurry">
				<Container size='nav'>
					<nav className='flex items-center h-16 gap-12 text-sm'>
						<a href='/'>
							<Image src={"MyProfilePicFullNoBack.svg"} alt={"Rafaeltab"} width={140} height={140} />
						</a>
						<div id='nav-links' className='flex gap-6 dark:text-neutral-500 text-neutral-900'>
							<NavLink href="/tech" title="Tech" />
							<NavLink href="/projects" title="Projects" />
							<NavLink href="/timeline" title="Timeline" />
						</div>
						<div className="ml-auto">
							<ThemeSwitch />
						</div>
					</nav>
				</Container>
			</header>

			<main className="h-screen overflow-y-scroll dark:bg-black bg-white">
				{children}
			</main>

			<Analytics />
		</>
	);
}

const themes = {
	"dark": (<FontAwesomeIcon icon={faMoon} />),
	"light": (<FontAwesomeIcon icon={faLightbulb} />),
	"system": (<FontAwesomeIcon icon={faComputer} />),
} as const

function ThemeSwitch() {
	const { theme } = useTheme();

	if (theme !== undefined && theme in themes) {
		const selectedTheme = theme as keyof typeof themes;

		return <ThemeButton theme={selectedTheme}>{themes[selectedTheme]}</ThemeButton>
	}
	return <ThemeButton theme="dark">{themes.dark}</ThemeButton>;
}

function ThemeButton(props: { theme: keyof typeof themes } & React.PropsWithChildren) {
	const { setTheme } = useTheme();
	const themeKeys = Object.keys(themes) as (keyof typeof themes)[];
	return (
		<button onClick={() => {
			setTheme(themeKeys[(themeKeys.indexOf(props.theme) + 1) % themeKeys.length])
		}} className='dark:text-neutral-500 text-neutral-900'>
			{props.children}
		</button>
	);
}
